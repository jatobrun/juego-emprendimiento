{"version":3,"sources":["utils/constants.js","utils/credentials.js","components/GameView.js","components/useInterval.js","components/LoginForm.js","components/RegisterForm.js","components/TokenView.js","components/NavBar.js","components/ProductLists.js","App.js","reportWebVitals.js","index.js"],"names":["CANVAS_SIZE","SNAKE_START","APPLE_START","SCALE","DIRECTIONS","38","40","37","39","credentiales","usuario_id","nombre","apellido","correo","puntos","isLogin","score","GameView","navigate","useNavigate","canvasRef","useRef","useState","snake","setSnake","apple","setApple","dir","setDir","speed","setSpeed","gameOver","setGameOver","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","gameLoop","endGame","a","length","data","fetch","method","body","JSON","stringify","headers","res","json","response","console","log","createApple","map","_a","i","Math","floor","random","checkCollision","piece","snk","segment","snakeCopy","parse","newSnakeHead","unshift","newSnake","newApple","checkAppleCollision","pop","context","getContext","setTransform","clearRect","window","innerWidth","innerHeight","fillStyle","forEach","x","y","fillRect","role","tabIndex","onKeyDown","e","keyCode","moveSnake","style","display","justifyContent","flexDirection","justifyItems","textAlign","color","Button","variant","onClick","marginBottom","border","ref","width","height","LoginForm","usuario","contrase√±a","setData","loading","setLoading","handleChange","target","name","value","handleSubmit","preventDefault","succes","alert","Grid","container","direction","alignItems","item","xs","Card","sx","mt","backgroundColor","padding","Typography","CardContent","onSubmit","TextField","label","margin","disabled","onChange","inputProps","InputLabelProps","type","CircularProgress","size","RegisterForm","cedula","telefono","TokenView","NavBar","Box","flexGrow","AppBar","position","Container","Toolbar","textDecoration","to","marginLeft","ProductLists","handleCanje","product_id","total_puntos","request","token","products","setProducts","loadProducts","premios","product","stock","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cd04096.chunk.js","sourcesContent":["const CANVAS_SIZE = [500, 500];\nconst SNAKE_START = [\n  [8, 7],\n  [8, 8]\n];\nconst APPLE_START = [5, 3];\nconst SCALE = 30;\nconst SPEED = 150;\nconst DIRECTIONS = {\n  38: [0, -1], // up\n  40: [0, 1], // down\n  37: [-1, 0], // left\n  39: [1, 0] // right\n};\n\nexport {\n  CANVAS_SIZE,\n  SNAKE_START,\n  APPLE_START,\n  SCALE,\n  SPEED,\n  DIRECTIONS\n};","export  let credentiales = {\n    usuario_id: 0,\n    nombre: \"\",\n    apellido: \"\",\n    correo: \"\",\n    puntos: 0,\n    isLogin: false,\n    score: 0\n}","import React, { useState, useRef, useEffect } from \"react\";\nimport { useInterval } from \"./useInterval\";\nimport {\n  CANVAS_SIZE,\n  SNAKE_START,\n  APPLE_START,\n  SCALE,\n  SPEED,\n  DIRECTIONS\n} from \"../utils/constants\";\nimport { Button } from \"@mui/material\";\nimport { credentiales } from \"../utils/credentials\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst GameView = () => {\n  const navigate = useNavigate()\n  const canvasRef = useRef();\n  const [snake, setSnake] = useState(SNAKE_START);\n  const [apple, setApple] = useState(APPLE_START);\n  const [dir, setDir] = useState([0, -1]);\n  const [speed, setSpeed] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  \n  useInterval(() => gameLoop(), speed);\n\n  const endGame = async () => {\n\tconst puntos = snake.length -2\n\tconst data = {\n\t\tusuario_id: credentiales.usuario_id,\n\t\tpuntos: puntos\n\t}\n\tconst res = await fetch('http://api.turisteando.xyz/game-over',{\n\t\tmethod:'POST',\n\t\tbody: JSON.stringify(data),\n\t\theaders: {'Content-Type': 'application/json'}\n\t})\n\tconst response = await res.json()\n\tconsole.log(response)\n    setSpeed(null);\n    setGameOver(true);\n  };\n\n  const moveSnake = ({ keyCode }) =>\n    keyCode >= 37 && keyCode <= 40 && setDir(DIRECTIONS[keyCode]);\n\n  const createApple = () =>\n\tapple.map((_a, i) => Math.floor(Math.random() * (CANVAS_SIZE[i] / SCALE)));\n\t\n  \n    \n\n  const checkCollision = (piece, snk = snake) => {\n    if (\n      piece[0] * SCALE >= CANVAS_SIZE[0] ||\n      piece[0] < 0 ||\n      piece[1] * SCALE >= CANVAS_SIZE[1] ||\n      piece[1] < 0\n    )\n      return true;\n\n    for (const segment of snk) {\n      if (piece[0] === segment[0] && piece[1] === segment[1]){\n\t\treturn true;\n\t  } \n    }\n    return false;\n  };\n\n  const checkAppleCollision = newSnake => {\n    if (newSnake[0][0] === apple[0] && newSnake[0][1] === apple[1]) {\n\t  \n      let newApple = createApple();\n      while (checkCollision(newApple, newSnake)) {\n        newApple = createApple();\n      }\n      setApple(newApple);\n      return true;\n    }\n    return false;\n  };\n\n  const gameLoop = () => {\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\n    const newSnakeHead = [snakeCopy[0][0] + dir[0], snakeCopy[0][1] + dir[1]];\n    snakeCopy.unshift(newSnakeHead);\n    if (checkCollision(newSnakeHead)) endGame();\n    if (!checkAppleCollision(snakeCopy)) snakeCopy.pop();\n    setSnake(snakeCopy);\n  };\n\n  const startGame = () => {\n    setSnake(SNAKE_START);\n    setApple(APPLE_START);\n    setDir([0, -1]);\n    setSpeed(SPEED);\n    setGameOver(false);\n  };\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n    context.clearRect(0, 0, window.innerWidth, window.innerHeight);\n    context.fillStyle = \"pink\";\n    snake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n    context.fillStyle = \"lightblue\";\n    context.fillRect(apple[0], apple[1], 1, 1);\n  }, [snake, apple, gameOver]);\n\n  return (\n\t  <>\n\t  {\n\t  \tcredentiales.isLogin ? \n\t\t  <div role=\"button\" tabIndex=\"0\" onKeyDown={e => moveSnake(e)} style={{\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: \"center\",\n\t\t\tflexDirection: \"column\",\n\t\t\tjustifyItems: \"center\",\n\t\t\ttextAlign: \"center\"\n\t\t  }}>\n\t\t  <div>\n\t\t  {gameOver? <div><h3 style={{color: 'white' }}>GAME OVER!</h3>\n\t\t  </div>: \n\t\t  <div>\n\t\t\t  {/* <h3 style={{color: 'white' }}>Score: {snake.lenght}</h3> */}\n\t\t\t  <h3></h3>\n\t\t  </div>}\n\t\t  <Button variant=\"contained\" color='warning' onClick={startGame} style={{marginBottom: '0.75rem'}}>Empezar</Button>\n\t\t  </div>\n\t\t  <div>\n\t\t  <canvas\n        style={{ border: \"5px solid black\" }}\n        ref={canvasRef}\n        width={`${CANVAS_SIZE[0]}px`}\n        height={`${CANVAS_SIZE[1]}px`}\n      />\n\t\t  </div>\n      \n    </div> :\n\t<div role=\"button\" tabIndex=\"0\" style={{\n\t\tdisplay: 'flex',\n\t\tjustifyContent: \"center\",\n\t\tflexDirection: \"column\",\n\t\tjustifyItems: \"center\",\n\t\ttextAlign: \"center\"\n\t  }}>\n\t  <div>\n\t  <h3></h3>\n\t  <Button variant=\"contained\" color='warning' onClick={() => navigate(\"/\")} style={{marginBottom: '0.75rem'}}>Login</Button>\n\t  </div>\n\t  <div>\n\t  <canvas\n\tstyle={{ border: \"5px solid black\" }}\n\tref={canvasRef}\n\twidth={`${CANVAS_SIZE[0]}px`}\n\theight={`${CANVAS_SIZE[1]}px`}\n  />\n\t  </div>\n  \n</div>  \n\t  \n\t  }\n\t  \n\t  </>\n    \n\t\n  );\n};\n\nexport default GameView;","// Custom Hook by Dan Abramov\nimport { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}","import { Button, Card, CardContent, CircularProgress, Grid, TextField, Typography } from \"@mui/material\";\nimport {useState} from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { credentiales } from \"../utils/credentials\";\nexport default function LoginForm(){\n\tconst [data, setData] = useState({\n        usuario: \"\",\n        contrase√±a: \"\"\n    })\n    const [loading, setLoading] = useState(false)\n    const navigate = useNavigate()\n    const handleChange = e => {\n        setData({...data, [e.target.name]: e.target.value});\n    }\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        setLoading(true)\n        const res = await fetch('http://api.turisteando.xyz/login',{\n            method:'POST',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json'}\n        })\n        const response = await res.json()\n        console.log(response)\n\t\tsetLoading(false)\n\t\tif (response.succes){\n\t\t\tcredentiales.usuario_id = response.usuario.id\n\t\t\tcredentiales.nombre = response.usuario.nombre \n\t\t\tcredentiales.apellido = response.usuario.apellido\n\t\t\tcredentiales.puntos = response.usuario.puntos \n\t\t\tcredentiales.correo = response.usuario.correo\n\t\t\tcredentiales.isLogin = true\n\t\t\tconsole.log(credentiales)\n        \tnavigate(\"/jugar\")\n\t\t}else{\n\t\t\talert(\"Hubo un error al tratar de loguear\")\n\t\t}\n        \n    }\n\treturn(\n\t\t<Grid container direction='column' alignItems='center' justifyContent='center'>\n            <Grid item xs={3}>\n                <Card sx={{mt:5}} style={{\n                    backgroundColor: \"#1e272e\",\n                    padding: \"1rem\"\n                }}>\n                    <Typography variant='5' textAlign=\"center\" color=\"white\"> LogIn </Typography>\n                    <CardContent>\n                        <form onSubmit={handleSubmit}>\n                        <TextField \n                                variant='filled' \n                                label='Usuario'\n                                sx={{\n                                    display: 'block',\n                                    margin: '.5rem 0'\n                                }}\n                                disabled={loading}\n                                name = 'usuario'\n                                onChange={handleChange}\n                                inputProps={{style: {color: \"white\"}}}\n                                InputLabelProps={{style: {color: \"white\"}}}\n                            />\n                            <TextField \n                                variant='filled' \n                                label='Contrase√±a'\n                                sx={{\n                                    display: 'block',\n                                    margin: '.5rem 0'\n                                }}\n                                disabled={loading}\n                                type=\"password\"\n                                name = 'contrase√±a'\n                                onChange={handleChange}\n                                inputProps={{style: {color: \"white\"}}}\n                                InputLabelProps={{style: {color: \"white\"}}}\n                            />\n                            <Button variant='contained' \n                                    color=\"primary\" \n                                    type=\"submit\" \n                                    disabled={!data.usuario || \n                                            !data.contrase√±a ||\n                                            loading} >\n                                {loading ? <CircularProgress\n                                    color=\"inherit\"\n                                    size={24}\n                                />: \"Ingresar\"}\n                            </Button>\n                        </form>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n\t)\n}","import { Button, Card, CardContent, CircularProgress, Grid, TextField, Typography } from \"@mui/material\";\nimport {useState} from 'react'\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function RegisterForm(){\n    const [data, setData] = useState({\n        cedula: \"\",\n        nombre: \"\",\n        apellido: \"\",\n        correo: \"\",\n        telefono: \"\",\n        usuario: \"\",\n        contrase√±a: \"\"\n    })\n    const [loading, setLoading] = useState(false)\n    const navigate = useNavigate()\n    const handleChange = e => {\n        setData({...data, [e.target.name]: e.target.value});\n    }\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n        setLoading(true)\n        const res = await fetch('http://api.turisteando.xyz/registro',{\n            method:'POST',\n            body: JSON.stringify(data),\n            headers: {'Content-Type': 'application/json'}\n        })\n        const response = await res.json()\n        console.log(response)\n        setLoading(false)\n        navigate(\"/\")\n    }\n\treturn(\n\t\t<Grid container direction='column' alignItems='center' justifyContent='center'>\n            <Grid item xs={3}>\n                <Card sx={{mt:5}} style={{\n                    backgroundColor: \"#1e272e\",\n                    padding: \"1rem\"\n                }}>\n                    <Typography variant='5' textAlign=\"center\" color=\"white\"> Registro </Typography>\n                    <CardContent>\n                        <form onSubmit={handleSubmit}>\n                            <TextField \n                                variant='filled' \n                                label='Cedula'\n                                sx={{\n                                    display: 'block',\n                                    margin: '.5rem 0'\n                                }}\n                                disabled={loading}\n                                name = 'cedula'\n                                onChange={handleChange}\n                                inputProps={{style: {color: \"white\"}}}\n                                InputLabelProps={{style: {color: \"white\"}}}\n                            />\n                            <TextField \n                                variant='filled' \n                                label='Nombre'\n                                sx={{\n                                    display: 'block',\n                                    margin: '.5rem 0'\n                                }}\n                                disabled={loading}\n                                name = 'nombre'\n                                onChange={handleChange}\n                                inputProps={{style: {color: \"white\"}}}\n                                InputLabelProps={{style: {color: \"white\"}}}\n                            />\n                            <TextField \n                                variant='filled' \n                                label='Apellido'\n                                sx={{\n                                    display: 'block',\n                                    margin: '.5rem 0'\n                                }}\n                                disabled={loading}\n                                name = 'apellido'\n                                onChange={handleChange}\n                                inputProps={{style: {color: \"white\"}}}\n                                InputLabelProps={{style: {color: \"white\"}}}\n                            />\n                            <TextField \n                                variant='filled' \n                                label='Correo'\n                                sx={{\n                                    display: 'block',\n                                    margin: '.5rem 0'\n                                }}\n                                disabled={loading}\n                                type=\"email\"\n                                name = 'correo'\n                                onChange={handleChange}\n                                inputProps={{style: {color: \"white\"}}}\n                                InputLabelProps={{style: {color: \"white\"}}}\n                            />\n                            <TextField \n                            variant='filled' \n                            label='Telefono'\n                            sx={{\n                                display: 'block',\n                                margin: '.5rem 0'\n                            }}\n                            disabled={loading}\n                            name = 'telefono'\n                            onChange={handleChange}\n                            inputProps={{style: {color: \"white\"}}}\n                            InputLabelProps={{style: {color: \"white\"}}}\n                        />\n                        <TextField \n                                variant='filled' \n                                label='Usuario'\n                                sx={{\n                                    display: 'block',\n                                    margin: '.5rem 0'\n                                }}\n                                disabled={loading}\n                                name = 'usuario'\n                                onChange={handleChange}\n                                inputProps={{style: {color: \"white\"}}}\n                                InputLabelProps={{style: {color: \"white\"}}}\n                            />\n                            <TextField \n                                variant='filled' \n                                label='Contrase√±a'\n                                sx={{\n                                    display: 'block',\n                                    margin: '.5rem 0'\n                                }}\n                                disabled={loading}\n                                type=\"password\"\n                                name = 'contrase√±a'\n                                onChange={handleChange}\n                                inputProps={{style: {color: \"white\"}}}\n                                InputLabelProps={{style: {color: \"white\"}}}\n                            />\n                            <Button variant='contained' \n                                    color=\"primary\" \n                                    type=\"submit\" \n                                    disabled={!data.usuario || \n                                            !data.contrase√±a ||\n                                            !data.nombre ||\n                                            !data.apellido ||\n                                            !data.cedula ||\n                                            !data.correo ||\n                                            !data.telefono ||\n                                            loading} >\n                                {loading ? <CircularProgress\n                                    color=\"inherit\"\n                                    size={24}\n                                />: \"Registrarse\"}\n                            </Button>\n                        </form>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n\t)\n}","export default function TokenView(){\n\treturn(\n\t\t<div>\n\t\t\tNav Bar\n\t\t</div>\n\t)\n}","import {AppBar, Box, Button, Container, Toolbar, Typography} from '@mui/material'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { credentiales } from '../utils/credentials';\nexport default function NavBar(){\n    const navigate = useNavigate();\n    const logout = () =>{\n        credentiales.isLogin = false\n        navigate(\"/\")\n    }\n\treturn(\n        <>\n        <Box sx={{flexGrow:1}}>\n            <AppBar position='static' color='transparent'>\n                <Container>\n                    <Toolbar>\n                        <Typography variant= \"h6\" sx={{flexGrow:1}}>\n                            <Link style={{textDecoration: \"none\", color: \"#eee\"}} to='/'>\n                                Turisteando\n                            </Link>\n                        </Typography>\n                        {\n                            (!credentiales.isLogin) ? \n                            <div>\n                                <Button variant = \"contained\" onClick={() => navigate(\"/\")}>Login</Button>\n                                <Button variant = \"contained\" onClick={() => navigate(\"/registro\")} style={{ marginLeft: '0.5rem'}}>Registro</Button>\n                            </div>\n                             : \n                            <div>\n                                <Button variant = \"contained\" onClick={() => navigate(\"/jugar\")}>Jugar</Button>\n                                <Button variant = \"contained\" onClick={() => navigate(\"/productos\")} style={{ marginLeft: '0.5rem'}}>Productos</Button>\n                                <Button variant = \"contained\" onClick={() => logout()} style={{ marginLeft: '0.5rem'}}>Salir</Button>\n                            </div>\n                            \n                        }\n                        \n                            \n                    </Toolbar>\n                </Container>\n            </AppBar>\n        </Box>\n        </>\n\t\t\n\t)\n}","import { Button, Card, CardContent, Typography } from \"@mui/material\"\nimport { useEffect, useState } from \"react\"\nimport { credentiales } from \"../utils/credentials\"\n\nexport default function ProductLists(){\n\tconst handleCanje = async (product_id, total_puntos) => {\n\t\tconst request = {\n\t\t\t\"producto_id\": product_id,\n\t\t\t\"total_puntos\": total_puntos,\n\t\t\t\"cantidad_total\": 1,\n\t\t\t\"usuario_id\": credentiales.usuario_id\n\t\t}\n\t\tconsole.log(request)\n\t\tconst response = await fetch('http://api.turisteando.xyz/crear-canje', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(request),\n\t\t\theaders:  {'Content-Type': 'application/json'}\n\t\t})\n\t\tconst res = await response.json()\n\t\tconsole.log(res)\n\t\talert(`Tu codigo de canje es ${res.token} pronto nos pondremos en contacto contigo`)\n\t}\n\tconst [products, setProducts] = useState([])\n\tconst loadProducts = async () => {\n\t\tconst response = await fetch('http://api.turisteando.xyz/productos')\n\t\tconst data = await response.json()\n\t\tconsole.log(data.premios)\n\t\tsetProducts(data.premios)\n\t}\n\n\tuseEffect(() => {\n\t\tloadProducts()\n\t}, [])\n\treturn(\n\t\t<>\t\n\t\t\t<div style={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t\tjustifyItems: \"center\",\n\t\t\t\ttextAlign: \"center\"\n\n\t\t\t}}>\n\t\t\t\t<div>\n\t\t\t\t\t<h1 style={{color: 'white' }}>Lista de Productos</h1>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h4 style={{color: 'white' }}>Hola, {credentiales.nombre} tienes {credentiales.puntos} puntos para canjear</h4>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t{\n\t\t\t\tproducts.map(product => (\n\t\t\t\t\t<Card style={{\n\t\t\t\t\t\tmarginBottom: \".7rem\",\n\t\t\t\t\t\tbackgroundColor: '#1e272e'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<CardContent style={{\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tcolor: 'white'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<Typography>Nombre: {product.nombre}</Typography>\n\t\t\t\t\t\t\t\t<Typography>Puntos: {product.puntos}</Typography>\n\t\t\t\t\t\t\t\t<Typography>Stock: {product.stock}</Typography>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color='warning' onClick={()=> handleCanje(product.id, product.puntos)}>Canjear</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t))\n\t\t\t}\n\t\t</>\n\t)\n}","import {BrowserRouter, Routes, Route} from 'react-router-dom'\nimport GameView from './components/GameView'\nimport LoginForm from './components/LoginForm'\nimport RegisterForm from './components/RegisterForm'\nimport TokenView from './components/TokenView'\nimport {Container} from '@mui/material'\nimport NavBar from './components/NavBar'\nimport ProductLists from './components/ProductLists'\nexport default function App(){\n\treturn(\n\t\t<BrowserRouter>\n\t\t\t<NavBar/>\n\t\t\t<Container>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/\" element={<LoginForm /> }/>\n\t\t\t\t\t<Route path=\"/registro\" element={<RegisterForm /> }/>\n\t\t\t\t\t<Route path=\"/productos\" element={<ProductLists /> }/>\n\t\t\t\t\t<Route path=\"/token\" element={<TokenView /> }/>\n\t\t\t\t\t<Route path=\"/jugar\" element={<GameView /> }/>\n\t\t\t\t</Routes>\n\t\t\t</Container>\n\t\t</BrowserRouter>\n\t)\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}